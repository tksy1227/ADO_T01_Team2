-- Create a clean table with the same structure as the raw table
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS AS
SELECT
  CAST(CASE WHEN CUSTOMERID = 'NULL' THEN NULL ELSE CUSTOMERID END AS VARCHAR(38)) AS CUSTOMERID,
  CAST(CASE WHEN CUSTOMERNAME = 'NULL' THEN NULL ELSE CUSTOMERNAME END AS VARCHAR(100)) AS CUSTOMERNAME,
  CAST(CASE WHEN BILLTOCUSTOMERID = 'NULL' THEN NULL ELSE BILLTOCUSTOMERID END AS VARCHAR(38)) AS BILLTOCUSTOMERID,
  CAST(CASE WHEN CUSTOMERCATEGORYID = 'NULL' THEN NULL ELSE CUSTOMERCATEGORYID END AS VARCHAR(38)) AS CUSTOMERCATEGORYID,
  CAST(CASE WHEN BUYINGGROUPID = 'NULL' THEN NULL ELSE BUYINGGROUPID END AS VARCHAR(38)) AS BUYINGGROUPID,
  CAST(CASE WHEN PRIMARYCONTACTPERSONID = 'NULL' THEN NULL ELSE PRIMARYCONTACTPERSONID END AS VARCHAR(38)) AS PRIMARYCONTACTPERSONID,
  CAST(CASE WHEN ALTERNATECONTACTPERSONID = 'NULL' THEN NULL ELSE ALTERNATECONTACTPERSONID END AS VARCHAR(38)) AS ALTERNATECONTACTPERSONID,
  CAST(CASE WHEN DELIVERYMETHODID = 'NULL' THEN NULL ELSE DELIVERYMETHODID END AS VARCHAR(38)) AS DELIVERYMETHODID,
  CAST(CASE WHEN DELIVERYCITYID = 'NULL' THEN NULL ELSE DELIVERYCITYID END AS VARCHAR(38)) AS DELIVERYCITYID,
  CAST(CASE WHEN CREDITLIMIT = 'NULL' THEN NULL ELSE CREDITLIMIT END AS VARCHAR(38)) AS CREDITLIMIT,
  CAST(CASE WHEN ACCOUNTOPENEDDATE = 'NULL' THEN NULL ELSE ACCOUNTOPENEDDATE END AS VARCHAR(20)) AS ACCOUNTOPENEDDATE,
  CAST(CASE WHEN STANDARDDISCOUNTPERCENTAGE = 'NULL' THEN NULL ELSE STANDARDDISCOUNTPERCENTAGE END AS VARCHAR(38)) AS STANDARDDISCOUNTPERCENTAGE,
  CAST(CASE WHEN ISSTATEMENTSENT = 'NULL' THEN NULL ELSE ISSTATEMENTSENT END AS VARCHAR(38)) AS ISSTATEMENTSENT,
  CAST(CASE WHEN ISONCREDITHOLD = 'NULL' THEN NULL ELSE ISONCREDITHOLD END AS VARCHAR(38)) AS ISONCREDITHOLD,
  CAST(CASE WHEN PAYMENTDAYS = 'NULL' THEN NULL ELSE PAYMENTDAYS END AS VARCHAR(38)) AS PAYMENTDAYS,
  CAST(CASE WHEN PHONENUMBER = 'NULL' THEN NULL ELSE PHONENUMBER END AS VARCHAR(20)) AS PHONENUMBER,
  CAST(CASE WHEN WEBSITEURL = 'NULL' THEN NULL ELSE WEBSITEURL END AS VARCHAR(256)) AS WEBSITEURL
FROM KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS_RAW;

SELECT *
FROM KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS;

----------------------------------------------
--Converting of datatypes
----------------------------------------------

---------------------CUSTOMERID------------------------
-- Convert CUSTOMERID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN CUSTOMERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET CUSTOMERID_NUM = CAST(CUSTOMERID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN CUSTOMERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN CUSTOMERID_NUM TO CUSTOMERID;

---------------------BILLTOCUSTOMERID------------------------
-- Convert BILLTOCUSTOMERID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN BILLTOCUSTOMERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET BILLTOCUSTOMERID_NUM = CAST(BILLTOCUSTOMERID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN BILLTOCUSTOMERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN BILLTOCUSTOMERID_NUM TO BILLTOCUSTOMERID;

---------------------CUSTOMERCATEGORYID------------------------
-- Convert CUSTOMERCATEGORYID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN CUSTOMERCATEGORYID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET CUSTOMERCATEGORYID_NUM = CAST(CUSTOMERCATEGORYID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN CUSTOMERCATEGORYID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN CUSTOMERCATEGORYID_NUM TO CUSTOMERCATEGORYID;

---------------------BUYINGGROUPID------------------------
-- Convert BUYINGGROUPID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN BUYINGGROUPID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET BUYINGGROUPID_NUM = CAST(BUYINGGROUPID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN BUYINGGROUPID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN BUYINGGROUPID_NUM TO BUYINGGROUPID;

---------------------PRIMARYCONTACTPERSONID------------------------
-- Convert PRIMARYCONTACTPERSONID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN PRIMARYCONTACTPERSONID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET PRIMARYCONTACTPERSONID_NUM = CAST(PRIMARYCONTACTPERSONID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN PRIMARYCONTACTPERSONID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN PRIMARYCONTACTPERSONID_NUM TO PRIMARYCONTACTPERSONID;

---------------------ALTERNATECONTACTPERSONID------------------------
-- Convert ALTERNATECONTACTPERSONID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN ALTERNATECONTACTPERSONID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET ALTERNATECONTACTPERSONID_NUM = CAST(ALTERNATECONTACTPERSONID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN ALTERNATECONTACTPERSONID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN ALTERNATECONTACTPERSONID_NUM TO ALTERNATECONTACTPERSONID;

---------------------DELIVERYMETHODID------------------------
-- Convert DELIVERYMETHODID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN DELIVERYMETHODID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET DELIVERYMETHODID_NUM = CAST(DELIVERYMETHODID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN DELIVERYMETHODID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN DELIVERYMETHODID_NUM TO DELIVERYMETHODID;

---------------------DELIVERYCITYID------------------------
-- Convert DELIVERYCITYID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN DELIVERYCITYID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET DELIVERYCITYID_NUM = CAST(DELIVERYCITYID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN DELIVERYCITYID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN DELIVERYCITYID_NUM TO DELIVERYCITYID;

---------------------CREDITLIMIT------------------------
-- Convert CREDITLIMIT to DECIMAL(18,2)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN CREDITLIMIT_DECIMAL DECIMAL(18,2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET CREDITLIMIT_DECIMAL = CAST(CREDITLIMIT AS DECIMAL(18,2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN CREDITLIMIT;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN CREDITLIMIT_DECIMAL TO CREDITLIMIT;

---------------------ACCOUNTOPENDDATE------------------------
-- Convert ACCOUNTOPENDDATE to DATE
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN ACCOUNTOPENEDATE_DATE DATE;

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET ACCOUNTOPENEDATE_DATE = CAST(ACCOUNTOPENEDDATE AS DATE);

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN ACCOUNTOPENEDDATE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN ACCOUNTOPENEDATE_DATE TO ACCOUNTOPENEDDATE;

---------------------STANDARDDISCOUNTPERCENTAGE------------------------
-- Convert STANDARDDISCOUNTPERCENTAGE to DECIMAL(18,2)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN STANDARDDISCOUNTPERCENTAGE_DECIMAL DECIMAL(18,2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET STANDARDDISCOUNTPERCENTAGE_DECIMAL = CAST(STANDARDDISCOUNTPERCENTAGE AS DECIMAL(18,2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN STANDARDDISCOUNTPERCENTAGE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN STANDARDDISCOUNTPERCENTAGE_DECIMAL TO STANDARDDISCOUNTPERCENTAGE;

---------------------ISSTATEMENT------------------------
-- Convert ISSTATEMENTSENT to BOOLEAN
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN ISSTATEMENT_BOOL BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET ISSTATEMENT_BOOL = CASE 
    WHEN ISSTATEMENTSENT = '1' THEN TRUE
    ELSE FALSE
END;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN ISSTATEMENTSENT;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN ISSTATEMENT_BOOL TO ISSTATEMENTSENT;

---------------------ISONCREDITHOLD------------------------
-- Convert ISONCREDITHOLD to BOOLEAN
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN ISONCREDITHOLD_BOOL BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET ISONCREDITHOLD_BOOL = CASE 
    WHEN ISONCREDITHOLD = '1' THEN TRUE
    ELSE FALSE
END;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN ISONCREDITHOLD;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN ISONCREDITHOLD_BOOL TO ISONCREDITHOLD;

---------------------PAYMENTDAYS------------------------
-- Convert PAYMENTDAYS to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD COLUMN PAYMENTDAYS_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
SET PAYMENTDAYS_NUM = CAST(PAYMENTDAYS AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
DROP COLUMN PAYMENTDAYS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
RENAME COLUMN PAYMENTDAYS_NUM TO PAYMENTDAYS;

SELECT 
    CUSTOMERID,
    BILLTOCUSTOMERID,
    CUSTOMERCATEGORYID,
    BUYINGGROUPID,
    PRIMARYCONTACTPERSONID,
    ALTERNATECONTACTPERSONID,
    DELIVERYMETHODID,
    DELIVERYCITYID,
    CREDITLIMIT,
    ACCOUNTOPENEDDATE,
    STANDARDDISCOUNTPERCENTAGE,
    ISSTATEMENTSENT,
    ISONCREDITHOLD,
    PAYMENTDAYS
FROM KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
LIMIT 10;

select * from SALES_CUSTOMERS LIMIT 20


--------------------------------------------------
--Adding of primary key into the table
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT PK_SALES_CUSTOMERS_CUSTOMERID
PRIMARY KEY (CUSTOMERID);


--------------------------------------------------
--Adding of unique key into the table
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT UK_SALES_CUSTOMERS_CUSTOMERNAME
UNIQUE (CUSTOMERNAME);


-------------------------------------------------------
--ERROR HANDLING
-------------------------------------------------------
WITH CTE AS (
    SELECT 
        CUSTOMERID,
        CUSTOMERNAME, 
        BILLTOCUSTOMERID, 
        CUSTOMERCATEGORYID, 
        BUYINGGROUPID, 
        PRIMARYCONTACTPERSONID, 
        ALTERNATECONTACTPERSONID, 
        DELIVERYMETHODID, 
        DELIVERYCITYID, 
        CREDITLIMIT, 
        ACCOUNTOPENEDDATE, 
        STANDARDDISCOUNTPERCENTAGE, 
        ISSTATEMENTSENT, 
        ISONCREDITHOLD, 
        PAYMENTDAYS, 
        PHONENUMBER, 
        WEBSITEURL,
        LAG(CUSTOMERID) OVER (ORDER BY CUSTOMERID) AS prev_customerid,
        ROW_NUMBER() OVER (ORDER BY CUSTOMERID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
)
SELECT  
        CUSTOMERNAME, 
        BILLTOCUSTOMERID, 
        CUSTOMERCATEGORYID, 
        BUYINGGROUPID, 
        PRIMARYCONTACTPERSONID, 
        ALTERNATECONTACTPERSONID, 
        DELIVERYMETHODID, 
        DELIVERYCITYID, 
        CREDITLIMIT, 
        ACCOUNTOPENEDDATE, 
        STANDARDDISCOUNTPERCENTAGE, 
        ISSTATEMENTSENT, 
        ISONCREDITHOLD, 
        PAYMENTDAYS, 
        PHONENUMBER, 
        WEBSITEURL,
    CASE
        WHEN CUSTOMERID IS NULL THEN prev_customerid + 1
        ELSE CUSTOMERID
    END AS CUSTOMERID
FROM CTE
ORDER BY row_num;

-------------------------------------------------------
--Adding of foreign key to table
-------------------------------------------------------

-- Foreign Key: CustomerCategoryID -> Sales.CustomerCategories.CustomerCategoryID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_SALES_CUSTOMERS_CUSTOMERCATEGORYID_SALES_CUSTOMERCATEGORIES
FOREIGN KEY (CUSTOMERCATEGORYID)
REFERENCES KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERCATEGORIES(CUSTOMERCATEGORYID);

-- Foreign Key: BuyingGroupID -> Sales.BuyingGroups.BuyingGroupID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_SALES_CUSTOMERS_BUYINGGROUPID_SALES_BUYINGGROUPS
FOREIGN KEY (BUYINGGROUPID)
REFERENCES KN_LOGISTICS.SNOWSQL.SALES_BUYINGGROUPS(BUYINGGROUPID);

-- Foreign Key: PrimaryContactPersonID -> Application.People.PersonID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_SALES_CUSTOMERS_PRIMARYCONTACTPERSONID_APPLICATION_PEOPLE
FOREIGN KEY (PRIMARYCONTACTPERSONID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE(PERSONID);

-- Foreign Key: AlternateContactPersonID -> Application.People.PersonID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_SALES_CUSTOMERS_ALTERNATECONTACTPERSONID_APPLICATION_PEOPLE
FOREIGN KEY (ALTERNATECONTACTPERSONID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE(PERSONID);

-- Foreign Key: DeliveryMethodID -> Application.DeliveryMethods.DeliveryMethodID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_SALES_CUSTOMERS_DELIVERYMETHODID_APPLICATION_DELIVERYMETHODS
FOREIGN KEY (DELIVERYMETHODID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS(DELIVERYMETHODID);

SELECT * FROM SALES_CUSTOMERS LIMIT 20
