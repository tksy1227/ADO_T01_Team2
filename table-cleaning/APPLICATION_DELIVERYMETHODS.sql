-- Create a clean table with the same structure as the raw table but we pull data from the raw table into this table (final table)
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS AS
SELECT
  CAST(CASE WHEN DELIVERYMETHODID = 'NULL' THEN NULL ELSE DELIVERYMETHODID END AS VARCHAR(38)) AS DELIVERYMETHODID,
  CAST(CASE WHEN DELIVERYMETHODNAME = 'NULL' THEN NULL ELSE DELIVERYMETHODNAME END AS VARCHAR(50)) AS DELIVERYMETHODNAME
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS_RAW;

-- ADD A NEW DELIVERYMETHOD for those without a delivery method
INSERT INTO KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS (DELIVERYMETHODID, DELIVERYMETHODNAME)
VALUES
    (11, 'None');

-- Total Number of Null values in string 'NULL' for all columns
SELECT COUNT(*) FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
WHERE DELIVERYMETHODID IS NULL
OR DELIVERYMETHODNAME IS NULL;
    
-- Null value checks for all columns (only numeric data type columns)
SELECT 
    COUNT(CASE WHEN DELIVERYMETHODID IS NULL THEN 1 END) AS count_DELIVERYMETHODID_NULL,
    COUNT(CASE WHEN DELIVERYMETHODNAME IS NULL THEN 1 END) AS count_DELIVERYMETHODNAME_NULL
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS;


--DELIVERYMETHODID
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
ADD COLUMN DELIVERYMETHODID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
SET DELIVERYMETHODID_NUM = TO_NUMBER(DELIVERYMETHODID);

SELECT DELIVERYMETHODID, DELIVERYMETHODID_NUM
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
DROP COLUMN DELIVERYMETHODID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
RENAME COLUMN DELIVERYMETHODID_NUM TO DELIVERYMETHODID;

--check the number of rows of DELIVERYMETHODID = 1(random DELIVERYMETHODID from data), cross checked with excel sheet
SELECT COUNT(*) AS row_count
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
WHERE DELIVERYMETHODID = 1;


-- primary key
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
ADD CONSTRAINT PK_APPLICATION_DELIVERYMETHODS_DELIVERYMETHODID
PRIMARY KEY (DELIVERYMETHODID);

-- unique key
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
ADD CONSTRAINT UK_APPLICATION_DELIVERYMETHODS_DELIVERYMETHODNAME
UNIQUE (DELIVERYMETHODNAME);

-- null error handling for primary key (increment 1 to impute null value primary keys from the previous record)
WITH CTE AS (
    SELECT 
        DELIVERYMETHODID,
        DELIVERYMETHODNAME,
        LAG(DELIVERYMETHODID) OVER (ORDER BY DELIVERYMETHODID) AS prev_DELIVERYMETHODID,
        ROW_NUMBER() OVER (ORDER BY DELIVERYMETHODID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS
)
SELECT 
        DELIVERYMETHODNAME,
    CASE
        WHEN DELIVERYMETHODID IS NULL THEN prev_DELIVERYMETHODID + 1
        ELSE DELIVERYMETHODID
    END AS DELIVERYMETHODID
FROM CTE
ORDER BY row_num;


-- foreign keys
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_CUSTOMERS
ADD CONSTRAINT FK_Sales_Customers_DeliveryMethodID_Application_DeliveryMethods
FOREIGN KEY (DeliveryMethodID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS(DeliveryMethodID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.Purchasing_Suppliers
ADD CONSTRAINT FK_Purchasing_Suppliers_DeliveryMethodID_Application_DeliveryMethods
FOREIGN KEY (DELIVERYMETHODID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS(DeliveryMethodID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.Sales_Invoices
ADD CONSTRAINT FK_Sales_Invoices_DeliveryMethodID_Application_DeliveryMethods
FOREIGN KEY (DELIVERYMETHODID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS(DeliveryMethodID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.Purchasing_PurchaseOrders
ADD CONSTRAINT FK_Purchasing_PurchaseOrders_DeliveryMethodID_Application_DeliveryMethods
FOREIGN KEY (DELIVERYMETHODID)
REFERENCES KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS(DeliveryMethodID);
