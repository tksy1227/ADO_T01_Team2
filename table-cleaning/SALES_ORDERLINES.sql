-- Create a clean table with the same structure as the raw table
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES AS
SELECT
  CAST(CASE WHEN ORDERLINEID = 'NULL' THEN NULL ELSE ORDERLINEID END AS VARCHAR(38)) AS ORDERLINEID,
  CAST(CASE WHEN ORDERID = 'NULL' THEN NULL ELSE ORDERID END AS VARCHAR(38)) AS ORDERID,
  CAST(CASE WHEN STOCKITEMID = 'NULL' THEN NULL ELSE STOCKITEMID END AS VARCHAR(38)) AS STOCKITEMID,
  CAST(CASE WHEN DESCRIPTION = 'NULL' THEN NULL ELSE DESCRIPTION END AS VARCHAR(100)) AS DESCRIPTION,
  CAST(CASE WHEN PACKAGETYPEID = 'NULL' THEN NULL ELSE PACKAGETYPEID END AS VARCHAR(38)) AS PACKAGETYPEID,
  CAST(CASE WHEN QUANTITY = 'NULL' THEN NULL ELSE QUANTITY END AS VARCHAR(38)) AS QUANTITY,
  CAST(CASE WHEN UNITPRICE = 'NULL' THEN NULL ELSE UNITPRICE END AS VARCHAR(38)) AS UNITPRICE,
  CAST(CASE WHEN TAXRATE = 'NULL' THEN NULL ELSE TAXRATE END AS VARCHAR(38)) AS TAXRATE,
  CAST(CASE WHEN PICKEDQUANTITY = 'NULL' THEN NULL ELSE PICKEDQUANTITY END AS VARCHAR(38)) AS PICKEDQUANTITY,
  CAST(CASE WHEN PICKINGCOMPLETEDWHEN = 'NULL' THEN NULL ELSE PICKINGCOMPLETEDWHEN END AS VARCHAR(25)) AS PICKINGCOMPLETEDWHEN
FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES_RAW;


------------------------------------
--Converting of datatypes
------------------------------------
---------------------ORDERLINEID------------------------
-- Convert ORDERLINEID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN ORDERLINEID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET ORDERLINEID_NUM = CAST(ORDERLINEID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN ORDERLINEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN ORDERLINEID_NUM TO ORDERLINEID;

---------------------ORDERID------------------------
-- Convert ORDERID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN ORDERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET ORDERID_NUM = CAST(ORDERID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN ORDERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN ORDERID_NUM TO ORDERID;

---------------------STOCKITEMID------------------------
-- Convert STOCKITEMID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN STOCKITEMID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET STOCKITEMID_NUM = CAST(STOCKITEMID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN STOCKITEMID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN STOCKITEMID_NUM TO STOCKITEMID;

---------------------PACKAGETYPEID------------------------
-- Convert PACKAGETYPEID to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN PACKAGETYPEID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET PACKAGETYPEID_NUM = CAST(PACKAGETYPEID AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN PACKAGETYPEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN PACKAGETYPEID_NUM TO PACKAGETYPEID;

---------------------QUANTITY------------------------
-- Convert QUANTITY to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN QUANTITY_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET QUANTITY_NUM = CAST(QUANTITY AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN QUANTITY;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN QUANTITY_NUM TO QUANTITY;

---------------------PICKEDQUANTITY------------------------
-- Convert PICKEDQUANTITY to NUMBER(38,0)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN PICKEDQUANTITY_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET PICKEDQUANTITY_NUM = CAST(PICKEDQUANTITY AS NUMBER(38,0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN PICKEDQUANTITY;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN PICKEDQUANTITY_NUM TO PICKEDQUANTITY;

---------------------UNITPRICE------------------------
-- Add a new column for UNITPRICE with DECIMAL(18,2)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN UNITPRICE_DECIMAL DECIMAL(18,2);

-- Populate the new column with converted values
UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET UNITPRICE_DECIMAL = CAST(UNITPRICE AS DECIMAL(18,2));

-- Verify the conversion
SELECT UNITPRICE, UNITPRICE_DECIMAL
FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
LIMIT 10;

-- Drop the old UNITPRICE column
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN UNITPRICE;

-- Rename the new column to the original column name
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN UNITPRICE_DECIMAL TO UNITPRICE;

---------------------TAXRATE------------------------
-- Add a new column for TAXRATE with DECIMAL(18,3)
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN TAXRATE_DECIMAL DECIMAL(18,3);

-- Populate the new column with converted values
UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET TAXRATE_DECIMAL = CAST(TAXRATE AS DECIMAL(18,3));

-- Verify the conversion
SELECT TAXRATE, TAXRATE_DECIMAL
FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
LIMIT 10;

-- Drop the old TAXRATE column
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN TAXRATE;

-- Rename the new column to the original column name
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN TAXRATE_DECIMAL TO TAXRATE;


------------PICKINGCOMPLETEDWHEN----------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD COLUMN PICKINGCOMPLETEDWHEN_DATE TIMESTAMP;

// Change to date format for ORDERDATE column
UPDATE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
SET PICKINGCOMPLETEDWHEN_DATE = TO_TIMESTAMP(PICKINGCOMPLETEDWHEN, 'DD/MM/YYYY HH24:MI');

SELECT PICKINGCOMPLETEDWHEN, PICKINGCOMPLETEDWHEN_DATE
FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
DROP COLUMN PICKINGCOMPLETEDWHEN;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
RENAME COLUMN PICKINGCOMPLETEDWHEN_DATE TO PICKINGCOMPLETEDWHEN;

// Check 10 rows of TRANSACTIONOCCURREDWHEN after updating the data type
SELECT PICKINGCOMPLETEDWHEN FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES LIMIT 10;

// Check 10 rows of the whole table after updating the data type
SELECT * FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES LIMIT 10;



-------------------------------------
--Adding primary key to table
-------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD CONSTRAINT PK_SALES_ORDERLINES_ORDERLINEID
PRIMARY KEY (ORDERLINEID);

-----------------------------------------------------
--ERROR HANDLING
-----------------------------------------------------
WITH CTE AS (
    SELECT 
        ORDERLINEID,
        ORDERID,
        STOCKITEMID,
        DESCRIPTION,
        PACKAGETYPEID,
        QUANTITY,
        UNITPRICE,
        TAXRATE,
        PICKEDQUANTITY,
        PICKINGCOMPLETEDWHEN,
        LAG(ORDERLINEID) OVER (ORDER BY ORDERLINEID) AS prev_orderlineid,
        ROW_NUMBER() OVER (ORDER BY ORDERLINEID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
)
SELECT 
    ORDERID,
    STOCKITEMID,
    DESCRIPTION,
    PACKAGETYPEID,
    QUANTITY,
    UNITPRICE,
    TAXRATE,
    PICKEDQUANTITY,
    PICKINGCOMPLETEDWHEN,
    CASE
        WHEN ORDERLINEID IS NULL THEN prev_orderlineid + 1
        ELSE ORDERLINEID
    END AS ORDERLINEID
FROM CTE
ORDER BY row_num;



-------------------------------------------------------
--Adding of foreign key to table
-------------------------------------------------------
-- Add foreign key for OrderID referencing Sales.Orders
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD CONSTRAINT FK_OrderID FOREIGN KEY (OrderID)
REFERENCES SALES_ORDERS(OrderID);

-- Add foreign key for StockItemID referencing Warehouse.StockItems
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD CONSTRAINT FK_StockItemID FOREIGN KEY (StockItemID)
REFERENCES Warehouse_StockItems(StockItemID);

-- Add foreign key for PackageTypeID referencing Warehouse.PackageTypes
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
ADD CONSTRAINT FK_PackageTypeID FOREIGN KEY (PackageTypeID)
REFERENCES Warehouse_PackageTypes(PackageTypeID);

---------------------FINAL VERIFICATION------------------------
-- Select all columns to verify their final state
SELECT *
FROM KN_LOGISTICS.SNOWSQL.SALES_ORDERLINES
LIMIT 10;
