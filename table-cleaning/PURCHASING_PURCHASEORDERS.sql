-- Create a clean table with the same structure as the raw table but we pull data from the raw table into this table (final table)
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS AS
SELECT
  CAST(CASE WHEN PURCHASEORDERID = 'NULL' THEN NULL ELSE PURCHASEORDERID END AS VARCHAR(38)) AS PURCHASEORDERID,
  CAST(CASE WHEN SUPPLIERID = 'NULL' THEN NULL ELSE SUPPLIERID END AS VARCHAR(38)) AS SUPPLIERID,
  CAST(CASE WHEN ORDERDATE = 'NULL' THEN NULL ELSE ORDERDATE END AS VARCHAR(20)) AS ORDERDATE,
  CAST(CASE WHEN DELIVERYMETHODID = 'NULL' THEN NULL ELSE DELIVERYMETHODID END AS VARCHAR(38)) AS DELIVERYMETHODID,
  CAST(CASE WHEN CONTACTPERSONID = 'NULL' THEN NULL ELSE CONTACTPERSONID END AS VARCHAR(38)) AS CONTACTPERSONID,
  CAST(CASE WHEN EXPECTEDDELIVERYDATE = 'NULL' THEN NULL ELSE EXPECTEDDELIVERYDATE END AS VARCHAR(20)) AS EXPECTEDDELIVERYDATE,
  CAST(CASE WHEN SUPPLIERREFERENCE = 'NULL' THEN NULL ELSE SUPPLIERREFERENCE END AS VARCHAR(20)) AS SUPPLIERREFERENCE,
  CAST(CASE WHEN ISORDERFINALIZED = 'NULL' THEN NULL ELSE ISORDERFINALIZED END AS VARCHAR(38)) AS ISORDERFINALIZED
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS_RAW;

-- Total Number of Null values for all columns
SELECT COUNT(*) FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE PURCHASEORDERID IS NULL
OR SUPPLIERID IS NULL
OR ORDERDATE IS NULL
OR DELIVERYMETHODID IS NULL
OR CONTACTPERSONID IS NULL
OR EXPECTEDDELIVERYDATE IS NULL
OR SUPPLIERREFERENCE IS NULL
OR ISORDERFINALIZED IS NULL;

-- Null value checks for all columns (only varchar data type columns)
SELECT 
    SUM(CASE WHEN SUPPLIERREFERENCE = 'NULL' THEN 1 ELSE 0 END) AS NULL_COUNT_SUPPLIERREFERENCE
FROM 
    KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;
    

-- Null value checks for all columns (only numeric/boolean data type columns)
SELECT 
    COUNT(CASE WHEN PURCHASEORDERID IS NULL THEN 1 END) AS count_PURCHASEORDERID_NULL,
    COUNT(CASE WHEN SUPPLIERID IS NULL THEN 1 END) AS count_SUPPLIERID_NULL,
    COUNT(CASE WHEN ORDERDATE IS NULL THEN 1 END) AS count_ORDERDATE_NULL,
    COUNT(CASE WHEN DELIVERYMETHODID IS NULL THEN 1 END) AS count_DELIVERYMETHODID_NULL,
    COUNT(CASE WHEN CONTACTPERSONID IS NULL THEN 1 END) AS count_CONTACTPERSONID_NULL,
    COUNT(CASE WHEN EXPECTEDDELIVERYDATE IS NULL THEN 1 END) AS count_EXPECTEDDELIVERYDATE_NULL,
    COUNT(CASE WHEN SUPPLIERREFERENCE IS NULL THEN 1 END) AS count_SUPPLIERREFERENCE_NULL,
    COUNT(CASE WHEN ISORDERFINALIZED IS NULL THEN 1 END) AS count_ISORDERFINALIZED_NULL
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

--------------------------------------------------
-- data type conversion (to date) ORDERDATE 
--------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN ORDERDATE_DATE DATE;

-- Change to date format for ORDERDATE column
UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET ORDERDATE_DATE = TO_DATE(ORDERDATE, 'DD/MM/YYYY');

SELECT ORDERDATE, ORDERDATE_DATE
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN ORDERDATE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN ORDERDATE_DATE TO ORDERDATE;

--------------------------------------------------
-- data type conversion (to date) EXPECTEDDELIVERYDATE 
--------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN EXPECTEDDELIVERYDATE_DATE DATE;

-- Change to date format for ORDERDATE column
UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET EXPECTEDDELIVERYDATE_DATE = TO_DATE(EXPECTEDDELIVERYDATE, 'DD/MM/YYYY');

SELECT EXPECTEDDELIVERYDATE, EXPECTEDDELIVERYDATE_DATE
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN EXPECTEDDELIVERYDATE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN EXPECTEDDELIVERYDATE_DATE TO EXPECTEDDELIVERYDATE;

--------------------------------------------------
-- data type conversion (to number) SUPPLIERID 
--------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN SUPPLIERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET SUPPLIERID_NUM = TO_NUMBER(SUPPLIERID);

SELECT SUPPLIERID, SUPPLIERID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN SUPPLIERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN SUPPLIERID_NUM TO SUPPLIERID;

SELECT *
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE SUPPLIERID = 7;

--check the number of rows of SUPPLIERID = 7(random SUPPLIERID from data), cross checked with excel sheet
SELECT COUNT(*) AS row_count
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE SUPPLIERID = 7;

--------------------------------------------------
-- data type conversion (to number) PURCHASEORDERID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN PURCHASEORDERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET PURCHASEORDERID_NUM = TO_NUMBER(PURCHASEORDERID);

SELECT PURCHASEORDERID, PURCHASEORDERID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN PURCHASEORDERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN PURCHASEORDERID_NUM TO PURCHASEORDERID;

--check the number of rows of PURCHASEORDERID = 109(random PURCHASEORDERID from data), cross checked with excel sheet
SELECT COUNT(*) AS row_count
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE PURCHASEORDERID = 109;

--------------------------------------------------
-- data type conversion (to number) CONTACTPERSONID 
--------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN CONTACTPERSONID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET CONTACTPERSONID_NUM = TO_NUMBER(CONTACTPERSONID);

SELECT CONTACTPERSONID, CONTACTPERSONID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN CONTACTPERSONID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN CONTACTPERSONID_NUM TO CONTACTPERSONID;

--check the number of rows of CONTACTPERSONID = 2(random CONTACTPERSONID from data), cross checked with excel sheet
SELECT COUNT(*) AS row_count
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE CONTACTPERSONID = 2;

--------------------------------------------------
-- data type conversion (to number) DELIVERYMETHODID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN DELIVERYMETHODID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET DELIVERYMETHODID_NUM = TO_NUMBER(DELIVERYMETHODID);

SELECT DELIVERYMETHODID, DELIVERYMETHODID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN DELIVERYMETHODID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN DELIVERYMETHODID_NUM TO DELIVERYMETHODID;

--check the number of rows of DELIVERYMETHODID = 1(random DELIVERYMETHODID from data), cross checked with excel sheet
SELECT COUNT(*) AS row_count
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
WHERE DELIVERYMETHODID = 2;

--------------------------------------------------
-- data type conversion (to Boolean) ISORDERLINEFINALIZED 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD COLUMN ISORDERLINEFINALIZED_NUM BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
SET ISORDERLINEFINALIZED_NUM = TO_BOOLEAN(ISORDERFINALIZED);

SELECT ISORDERFINALIZED, ISORDERLINEFINALIZED_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
DROP COLUMN ISORDERFINALIZED;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
RENAME COLUMN ISORDERLINEFINALIZED_NUM TO ISORDERFINALIZED;

SELECT * FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS LIMIT 10;

-- primary key
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD CONSTRAINT PK_PURCHASING_PURCHASEORDERS_PURCHASEORDERID
PRIMARY KEY (PURCHASEORDERID);

-- null error handling for primary key (increment 1 to impute null value primary keys from the previous record)
WITH CTE AS (
    SELECT 
        PurchaseOrderID,
        SupplierID,
        OrderDate,
        DeliveryMethodID,
        ContactPersonID,
        ExpectedDeliveryDate,
        SupplierReference,
        IsOrderFinalized,
        LAG(PurchaseOrderID) OVER (ORDER BY PurchaseOrderID) AS prev_PurchaseOrderID,
        ROW_NUMBER() OVER (ORDER BY PurchaseOrderID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
)
SELECT 
        SupplierID,
        OrderDate,
        DeliveryMethodID,
        ContactPersonID,
        ExpectedDeliveryDate,
        SupplierReference,
        IsOrderFinalized,
    CASE
        WHEN PurchaseOrderID IS NULL THEN prev_PurchaseOrderID + 1
        ELSE PurchaseOrderID
    END AS PurchaseOrderID
FROM CTE
ORDER BY row_num;


-- foreign keys
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD CONSTRAINT FK_Purchasing_PurchaseOrders_DeliveryMethodID_Application_DeliveryMethods
FOREIGN KEY (DeliveryMethodID)
REFERENCES KN_LOGISTICS.SNOWSQL.Application_DeliveryMethods(DeliveryMethodID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD CONSTRAINT FK_Purchasing_PurchaseOrders_ContactPersonID_Application_People
FOREIGN KEY (ContactPersonID)
REFERENCES KN_LOGISTICS.SNOWSQL.Application_People(PersonID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS
ADD CONSTRAINT FK_Purchasing_PurchaseOrders_SupplierID_Purchasing_Suppliers
FOREIGN KEY (SupplierID)
REFERENCES KN_LOGISTICS.SNOWSQL.Purchasing_Suppliers(SupplierID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.Purchasing_PurchaseOrderLines
ADD CONSTRAINT FK_Purchasing_PurchaseOrderLines_PurchaseOrderID_Purchasing_PurchaseOrders
FOREIGN KEY (PurchaseOrderID)
REFERENCES KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS(PurchaseOrderID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMTRANSACTIONS
ADD CONSTRAINT FK_Warehouse_StockItemTransactions_PurchaseOrderID_Purchasing_PurchaseOrders
FOREIGN KEY (PURCHASEORDERID)
REFERENCES KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS(PURCHASEORDERID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.Purchasing_SupplierTransactions
ADD CONSTRAINT FK_Purchasing_SupplierTransactions_PurchaseOrderID_Purchasing_PurchaseOrders
FOREIGN KEY (PurchaseOrderID)
REFERENCES KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS(PurchaseOrderID);
