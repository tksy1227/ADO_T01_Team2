-- Create a clean table with the same structure as the raw table
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES AS
SELECT
  CAST(CASE WHEN TRANSACTIONTYPEID = 'NULL' THEN NULL ELSE TRANSACTIONTYPEID END AS VARCHAR(38)) AS TRANSACTIONTYPEID,
  CAST(CASE WHEN TRANSACTIONTYPENAME = 'NULL' THEN NULL ELSE TRANSACTIONTYPENAME END AS VARCHAR(50)) AS TRANSACTIONTYPENAME
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES_RAW;

-- Verify the clean table
SELECT *
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES;

---------------------------------------------
// Data type conversion (to number): TRANSACTIONTYPEID
---------------------------------------------
// TRANSACTIONTYPEID
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
ADD COLUMN TRANSACTIONTYPEID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
SET TRANSACTIONTYPEID_NUM = TO_NUMBER(TRANSACTIONTYPEID);

SELECT TRANSACTIONTYPEID, TRANSACTIONTYPEID_NUM
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
DROP COLUMN TRANSACTIONTYPEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
RENAME COLUMN TRANSACTIONTYPEID_NUM TO TRANSACTIONTYPEID;
// Check 10 rows of SUPPLIERID after updating the data type
SELECT TRANSACTIONTYPEID FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES LIMIT 10;

// Check 10 rows of the whole table after updating the data type
SELECT * FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES;

---------------------------------------------------------------
--Adding of primary key to table
---------------------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
ADD CONSTRAINT PK_APPLICATION_TRANSACTIONTYPES_TRANSACTIONTYPEID
PRIMARY KEY (TRANSACTIONTYPEID);

----------------------------------------------------------------
--Adding of unique key to table
----------------------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
ADD CONSTRAINT UK_APPLICATION_TRANSACTIONTYPES_TRANSACTIONTYPENAME
UNIQUE (TRANSACTIONTYPENAME);

-------------------------------------------------------
-- ERROR HANDLING
-------------------------------------------------------
WITH CTE AS (
    SELECT 
        TRANSACTIONTYPEID,
        TRANSACTIONTYPENAME,
        LAG(TRANSACTIONTYPEID) OVER (ORDER BY TRANSACTIONTYPEID) AS prev_transactiontypeid,
        ROW_NUMBER() OVER (ORDER BY TRANSACTIONTYPEID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.APPLICATION_TRANSACTIONTYPES
)
SELECT 
    TRANSACTIONTYPENAME,
    CASE
        WHEN TRANSACTIONTYPEID IS NULL THEN prev_transactiontypeid + 1
        ELSE TRANSACTIONTYPEID
    END AS TRANSACTIONTYPEID
FROM CTE
ORDER BY row_num;



-------------------------------------------------------
--Adding of foreign key to table
-------------------------------------------------------
-- THERE IS NO FOREIGN KEY IN THIS TABLE

