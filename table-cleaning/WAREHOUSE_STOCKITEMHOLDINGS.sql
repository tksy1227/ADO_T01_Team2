-- Create a clean table with the same structure as the raw table but we pull data from the raw table into this table (final table)
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS AS
SELECT
  CAST(CASE WHEN STOCKITEMID = 'NULL' THEN NULL ELSE STOCKITEMID END AS VARCHAR(38)) AS STOCKITEMID,
  CAST(CASE WHEN QUANTITYONHAND = 'NULL' THEN NULL ELSE QUANTITYONHAND END AS VARCHAR(38)) AS QUANTITYONHAND,
  CAST(CASE WHEN BINLOCATION = 'NULL' THEN NULL ELSE BINLOCATION END AS VARCHAR(20)) AS BINLOCATION,
  CAST(CASE WHEN LASTSTOCKTAKEQUANTITY = 'NULL' THEN NULL ELSE LASTSTOCKTAKEQUANTITY END AS VARCHAR(38)) AS LASTSTOCKTAKEQUANTITY,
  CAST(CASE WHEN LASTCOSTPRICE = 'NULL' THEN NULL ELSE LASTCOSTPRICE END AS VARCHAR(38)) AS LASTCOSTPRICE,
  CAST(CASE WHEN REORDERLEVEL = 'NULL' THEN NULL ELSE REORDERLEVEL END AS VARCHAR(38)) AS REORDERLEVEL,
  CAST(CASE WHEN TARGETSTOCKLEVEL = 'NULL' THEN NULL ELSE TARGETSTOCKLEVEL END AS VARCHAR(38)) AS TARGETSTOCKLEVEL
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS_RAW;

-- Total Number of Null values for all columns
SELECT COUNT(*) FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
WHERE STOCKITEMID IS NULL
OR QUANTITYONHAND IS NULL
OR BINLOCATION IS NULL
OR LASTSTOCKTAKEQUANTITY IS NULL
OR LASTCOSTPRICE IS NULL
OR REORDERLEVEL IS NULL
OR TARGETSTOCKLEVEL IS NULL;
    
-- Null value checks for all columns (only numeric data type columns)
SELECT 
    COUNT(CASE WHEN STOCKITEMID IS NULL THEN 1 END) AS count_STOCKITEMID_NULL,
    COUNT(CASE WHEN QUANTITYONHAND IS NULL THEN 1 END) AS count_STOCKITEMID_NULL,
    COUNT(CASE WHEN LASTSTOCKTAKEQUANTITY IS NULL THEN 1 END) AS count_LASTSTOCKTAKEQUANTITY_NULL,
    COUNT(CASE WHEN BINLOCATION IS NULL THEN 1 END) AS count_BINLOCATION_NULL,    
    COUNT(CASE WHEN LASTCOSTPRICE IS NULL THEN 1 END) AS count_LASTCOSTPRICE_NULL,
    COUNT(CASE WHEN REORDERLEVEL IS NULL THEN 1 END) AS count_REORDERLEVEL_NULL,
    COUNT(CASE WHEN TARGETSTOCKLEVEL IS NULL THEN 1 END) AS count_TARGETSTOCKLEVEL_NULL
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

------------------------------------------------------
-- STOCKITEMID
------------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN STOCKITEMID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET STOCKITEMID_NUM = TO_NUMBER(STOCKITEMID);

SELECT STOCKITEMID, STOCKITEMID_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN STOCKITEMID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN STOCKITEMID_NUM TO STOCKITEMID;

--------------------------------------------------------
-- QUANTITYONHAND
------------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN QUANTITYONHAND_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET QUANTITYONHAND_NUM = TO_NUMBER(QUANTITYONHAND);

SELECT QUANTITYONHAND, QUANTITYONHAND_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN QUANTITYONHAND;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN QUANTITYONHAND_NUM TO QUANTITYONHAND;


-----------------------------------------
-- LASTSTOCKTAKEQUANTITY
------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN LASTSTOCKTAKEQUANTITY_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET LASTSTOCKTAKEQUANTITY_NUM = TO_NUMBER(LASTSTOCKTAKEQUANTITY);

SELECT LASTSTOCKTAKEQUANTITY, LASTSTOCKTAKEQUANTITY_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN LASTSTOCKTAKEQUANTITY;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN LASTSTOCKTAKEQUANTITY_NUM TO LASTSTOCKTAKEQUANTITY;


-----------------------------------------
-- LastCostPrice
--------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN LASTCOSTPRICE_NUM DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET LASTCOSTPRICE_NUM = TO_DECIMAL(LASTCOSTPRICE, 18, 2);

SELECT LASTCOSTPRICE, LASTCOSTPRICE_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN LASTCOSTPRICE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN LASTCOSTPRICE_NUM TO LASTCOSTPRICE;



--------------------------------------
-- REORDERLEVEL
---------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN REORDERLEVEL_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET REORDERLEVEL_NUM = TO_NUMBER(REORDERLEVEL);

SELECT REORDERLEVEL, REORDERLEVEL_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN REORDERLEVEL;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN REORDERLEVEL_NUM TO REORDERLEVEL;


-------------------------------------
-- TARGETSTOCKLEVEL
---------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD COLUMN TARGETSTOCKLEVEL_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
SET TARGETSTOCKLEVEL_NUM = TO_NUMBER(TARGETSTOCKLEVEL);

SELECT TARGETSTOCKLEVEL, TARGETSTOCKLEVEL_NUM
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
DROP COLUMN TARGETSTOCKLEVEL;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
RENAME COLUMN TARGETSTOCKLEVEL_NUM TO TARGETSTOCKLEVEL;


-- primary key
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMHOLDINGS
ADD CONSTRAINT PK_WAREHOUSE_STOCKITEMHOLDINGS_STOCKITEMID
PRIMARY KEY (STOCKITEMID);


-- null error handling for primary key (increment 1 to impute null value primary keys from the previous record)
WITH CTE AS (
    SELECT 
        StockItemID,
        QuantityOnHand,
        BinLocation,
        LastStocktakeQuantity,
        LastCostPrice,
        ReorderLevel,
        TargetStockLevel,
        LAG(StockItemID) OVER (ORDER BY StockItemID) AS prev_stockitemid,
        ROW_NUMBER() OVER (ORDER BY StockItemID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.Warehouse_StockItemHoldings
)
SELECT 
    QuantityOnHand,
    BinLocation,
    LastStocktakeQuantity,
    LastCostPrice,
    ReorderLevel,
    TargetStockLevel,
    CASE
        WHEN StockItemID IS NULL THEN prev_stockitemid + 1
        ELSE StockItemID
    END AS StockItemID
FROM CTE
ORDER BY row_num;
-- foreign keys
ALTER TABLE KN_LOGISTICS.SNOWSQL.Warehouse_StockItemHoldings
ADD CONSTRAINT FK_Warehouse_StockItemHoldings_StockItemID_Warehouse_StockItems
FOREIGN KEY (StockItemID)
REFERENCES KN_LOGISTICS.SNOWSQL.Warehouse_StockItems(StockItemID);
