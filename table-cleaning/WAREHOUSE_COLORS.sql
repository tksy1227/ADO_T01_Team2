create or replace TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS (
	COLORID VARCHAR,
	COLORNAME VARCHAR,
	unique (COLORNAME),
	primary key (COLORID),
	constraint FK_WAREHOUSE_PACKAGETYPE_COLORID foreign key (COLORID) references KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS(COLORID),
	constraint FK_WAREHOUSE_STOCKITEMS_COLORID_WAREHOUSE_COLORS foreign key (COLORID) references KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS(COLORID)
);

-- Null string value "NULL" checks for all columns (only varchar data type columns) 
SELECT
    SUM(CASE WHEN COLORID = 'NULL' THEN 1 ELSE 0 END) AS NULL_COUNT_COLORID,
    SUM(CASE WHEN COLORNAME = 'NULL' THEN 1 ELSE 0 END) AS NULL_COUNT_COLORNAME,
FROM 
    KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS;


-- count of null values in WAREHOUSE_COLORS
SELECT 
    SUM(CASE WHEN COLORID IS NULL THEN 1 ELSE 0 END) AS COLORID_NULL_COUNT,
    SUM(CASE WHEN COLORNAME IS NULL THEN 1 ELSE 0 END) AS COLORNAME_NULL_COUNT
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS;

-- convert 'NULL' string valyes into actual null values
UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
SET COLORID = NULL -- oTHERS
WHERE COLORID = 'NULL';

UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
SET COLORNAME = NULL -- oTHERS
WHERE COLORNAME = 'NULL';


-- count of duplicates in WAREHOUSE_COLORS
SELECT 
    COLORNAME, 
    COUNT(*) AS DUPLICATE_COUNT
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
GROUP BY COLORNAME
HAVING COUNT(*) > 1;


-- check for null values in the primary key in WAREHOUSE_COLORS
SELECT *
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
WHERE COLORID IS NULL;

-- check for duplicates in unique column in WAREHOUSE_COLORS
SELECT COLORNAME, COUNT(*)
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
GROUP BY COLORNAME
HAVING COUNT(*) > 1;

-- validate FK in tables in WAREHOUSE_COLORS
SELECT DISTINCT s.COLORID
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMS s
LEFT JOIN KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS c
    ON s.COLORID = c.COLORID
WHERE c.COLORID IS NULL;

-- data type conversion
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
ADD COLUMN COLORID_NUM NUMBER(38,0);

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
ADD COLUMN COLORNAME_NEW VARCHAR(20);

-- updating new columns
UPDATE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
SET COLORID_NUM = TRY_CAST(COLORID AS NUMBER),
    COLORNAME_NEW = COLORNAME;

-- verify data
SELECT 
    COLORID, COLORID_NUM,
    COLORNAME, COLORNAME_NEW
FROM KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS;

-- drop old columns
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
DROP COLUMN COLORID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
DROP COLUMN COLORNAME;

-- rename to original names
ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
RENAME COLUMN COLORID_NUM TO COLORID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
RENAME COLUMN COLORNAME_NEW TO COLORNAME;

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS
ADD CONSTRAINT PK_WAREHOUSE_COLORS_COLORID
PRIMARY KEY (COLORID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.WAREHOUSE_COLORS 
MODIFY COLUMN COLORID SET NOT NULL;


