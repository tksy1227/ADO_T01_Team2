select * from SALES_INVOICES

-- 1. Check for NULL values in the primary key
SELECT *
FROM SALES_INVOICES
WHERE INVOICEID IS NULL;

-- 2. Check for uniqueness of unique columns
SELECT _, COUNT(*)
FROM __
GROUP BY _
HAVING COUNT(*) > 1;
--If query returns with no results, it means that the column is unique (no duplicate values)
--since this table doesnt have any unique columns, this query was not used


--3. Checking of NULL values
-- Null value checks for numerical columns in SALES_INVOICES
SELECT 
    COUNT(CASE WHEN CUSTOMERID IS NULL THEN 1 END) AS count_CUSTOMERID_NULL,
    COUNT(CASE WHEN BILLTOCUSTOMERID IS NULL THEN 1 END) AS count_BILLTOCUSTOMERID_NULL,
    COUNT(CASE WHEN ORDERID IS NULL THEN 1 END) AS count_ORDERID_NULL,
    COUNT(CASE WHEN DELIVERYMETHODID IS NULL THEN 1 END) AS count_DELIVERYMETHODID_NULL,
    COUNT(CASE WHEN CONTACTPERSONID IS NULL THEN 1 END) AS count_CONTACTPERSONID_NULL,
    COUNT(CASE WHEN ACCOUNTSPERSONID IS NULL THEN 1 END) AS count_ACCOUNTSPERSONID_NULL,
    COUNT(CASE WHEN SALESPERSONPERSONID IS NULL THEN 1 END) AS count_SALESPERSONPERSONID_NULL,
    COUNT(CASE WHEN PACKEDBYPERSONID IS NULL THEN 1 END) AS count_PACKEDBYPERSONID_NULL,
    COUNT(CASE WHEN CUSTOMERPURCHASEORDERNUMBER IS NULL THEN 1 END) AS count_CUSTOMERPURCHASEORDERNUMBER_NULL,
    COUNT(CASE WHEN TOTALDRYITEMS IS NULL THEN 1 END) AS count_TOTALDRYITEMS_NULL,
    COUNT(CASE WHEN TOTALCHILLERITEMS IS NULL THEN 1 END) AS count_TOTALCHILLERITEMS_NULL
FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICES;

-- Null value checks for VARCHAR columns in SALES_INVOICES
SELECT
    SUM(CASE WHEN CONFIRMEDRECEIVEDBY IS NULL THEN 1 ELSE 0 END) AS NULL_COUNT_CONFIRMEDRECEIVEDBY
FROM 
    KN_LOGISTICS.SNOWSQL.SALES_INVOICES;


--4. Validate consistent data types for primary and foreign keys
-- Validate FK: ORDERID in SALES_INVOICES
SELECT DISTINCT si.ORDERID AS Invalid_ORDERID
FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICES si
LEFT JOIN KN_LOGISTICS.SNOWSQL.SALES_ORDERS so
    ON si.ORDERID = so.ORDERID
WHERE so.ORDERID IS NULL;

-- Validate FK: DELIVERYMETHODID in SALES_INVOICES
SELECT DISTINCT si.DELIVERYMETHODID AS Invalid_DELIVERYMETHODID
FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICES si
LEFT JOIN KN_LOGISTICS.SNOWSQL.APPLICATION_DELIVERYMETHODS ad
    ON si.DELIVERYMETHODID = ad.DELIVERYMETHODID
WHERE ad.DELIVERYMETHODID IS NULL;

--If query/queries produce no results, it means that the primary and foreign keys have the same datatype

--5. Check for duplicate rows in the table 
-- check for duplicates in unique column in WAREHOUSE_COLORS
SELECT INVOICEID, COUNT(*)
FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICES
GROUP BY INVOICEID
HAVING COUNT(*) > 1;
--if query produces no results, there are no duplicate rows in the table

