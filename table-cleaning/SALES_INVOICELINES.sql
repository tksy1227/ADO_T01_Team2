CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES AS
SELECT
  CAST(CASE WHEN DESCRIPTION = 'NULL' THEN NULL ELSE DESCRIPTION END AS VARCHAR(100)) AS DESCRIPTION,
  CAST(CASE WHEN INVOICELINEID = 'NULL' THEN NULL ELSE INVOICELINEID END AS VARCHAR(38)) AS INVOICELINEID,
  CAST(CASE WHEN INVOICEID = 'NULL' THEN NULL ELSE INVOICEID END AS VARCHAR(38)) AS INVOICEID,
  CAST(CASE WHEN STOCKITEMID = 'NULL' THEN NULL ELSE STOCKITEMID END AS VARCHAR(38)) AS STOCKITEMID,
  CAST(CASE WHEN PACKAGETYPEID = 'NULL' THEN NULL ELSE PACKAGETYPEID END AS VARCHAR(38)) AS PACKAGETYPEID,
  CAST(CASE WHEN QUANTITY = 'NULL' THEN NULL ELSE QUANTITY END AS VARCHAR(38)) AS QUANTITY,
  CAST(CASE WHEN UNITPRICE = 'NULL' THEN NULL ELSE UNITPRICE END AS VARCHAR(38)) AS UNITPRICE,
  CAST(CASE WHEN TAXAMOUNT = 'NULL' THEN NULL ELSE TAXAMOUNT END AS VARCHAR(38)) AS TAXAMOUNT,
  CAST(CASE WHEN LINEPROFIT = 'NULL' THEN NULL ELSE LINEPROFIT END AS VARCHAR(38)) AS LINEPROFIT,
  CAST(CASE WHEN EXTENDEDPRICE = 'NULL' THEN NULL ELSE EXTENDEDPRICE END AS VARCHAR(38)) AS EXTENDEDPRICE,
  CAST(CASE WHEN TAXRATE = 'NULL' THEN NULL ELSE TAXRATE END AS VARCHAR(38)) AS TAXRATE
FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES_RAW;


------------------------------------
--Converting of datatypes
------------------------------------
-- INVOICELINEID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN INVOICELINEID_NUM NUMBER(38, 0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET INVOICELINEID_NUM = CAST(INVOICELINEID AS NUMBER(38, 0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN INVOICELINEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN INVOICELINEID_NUM TO INVOICELINEID;

-- INVOICEID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN INVOICEID_NUM NUMBER(38, 0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET INVOICEID_NUM = CAST(INVOICEID AS NUMBER(38, 0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN INVOICEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN INVOICEID_NUM TO INVOICEID;

-- STOCKITEMID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN STOCKITEMID_NUM NUMBER(38, 0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET STOCKITEMID_NUM = CAST(STOCKITEMID AS NUMBER(38, 0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN STOCKITEMID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN STOCKITEMID_NUM TO STOCKITEMID;

-- PACKAGETYPEID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN PACKAGETYPEID_NUM NUMBER(38, 0);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET PACKAGETYPEID_NUM = CAST(PACKAGETYPEID AS NUMBER(38, 0));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN PACKAGETYPEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN PACKAGETYPEID_NUM TO PACKAGETYPEID;

-- UNITPRICE
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN UNITPRICE_DEC DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET UNITPRICE_DEC = CAST(UNITPRICE AS DECIMAL(18, 2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN UNITPRICE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN UNITPRICE_DEC TO UNITPRICE;

-- LINEPROFIT
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN LINEPROFIT_DEC DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET LINEPROFIT_DEC = CAST(LINEPROFIT AS DECIMAL(18, 2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN LINEPROFIT;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN LINEPROFIT_DEC TO LINEPROFIT;

-- EXTENDEDPRICE
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN EXTENDEDPRICE_DEC DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET EXTENDEDPRICE_DEC = CAST(EXTENDEDPRICE AS DECIMAL(18, 2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN EXTENDEDPRICE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN EXTENDEDPRICE_DEC TO EXTENDEDPRICE;

-- TAXAMOUNT
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN TAXAMOUNT_DEC DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET TAXAMOUNT_DEC = CAST(TAXAMOUNT AS DECIMAL(18, 2));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN TAXAMOUNT;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN TAXAMOUNT_DEC TO TAXAMOUNT;

-- TAXRATE
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD COLUMN TAXRATE_DEC DECIMAL(18, 3);

UPDATE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
SET TAXRATE_DEC = CAST(TAXRATE AS DECIMAL(18, 3));

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
DROP COLUMN TAXRATE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
RENAME COLUMN TAXRATE_DEC TO TAXRATE;


-------------------------------------
--Adding primary key to table
-------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD CONSTRAINT PK_SALES_INVOICELINES_INVOICELINEID
PRIMARY KEY (INVOICELINEID);


----------------------------------------------------
--ERROR HANDLING
-----------------------------------------------------
WITH CTE AS (
    SELECT 
        INVOICELINEID,
        INVOICEID,
        STOCKITEMID,
        DESCRIPTION,
        PACKAGETYPEID,
        QUANTITY,
        UNITPRICE,
        TAXAMOUNT,
        LINEPROFIT,
        EXTENDEDPRICE,
        TAXRATE,
        LAG(INVOICELINEID) OVER (ORDER BY INVOICELINEID) AS prev_invoicelineid,
        ROW_NUMBER() OVER (ORDER BY INVOICELINEID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
)
SELECT 
    INVOICEID,
    STOCKITEMID,
    DESCRIPTION,
    PACKAGETYPEID,
    QUANTITY,
    UNITPRICE,
    TAXAMOUNT,
    LINEPROFIT,
    EXTENDEDPRICE,
    TAXRATE,
    CASE
        WHEN INVOICELINEID IS NULL THEN prev_invoicelineid + 1
        ELSE INVOICELINEID
    END AS INVOICELINEID
FROM CTE
ORDER BY row_num;


-----------------------------------------------
--Adding foreign keys in the table
-----------------------------------------------
-- Foreign Key: Sales.InvoiceLines.InvoiceID -> Sales.Invoices.InvoiceID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD CONSTRAINT FK_SALES_INVOICELINES_INVOICEID_SALES_INVOICES
FOREIGN KEY (InvoiceID)
REFERENCES KN_LOGISTICS.SNOWSQL.SALES_INVOICES(InvoiceID);

-- Foreign Key: Sales.InvoiceLines.StockItemID -> Warehouse.StockItems.StockItemID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD CONSTRAINT FK_SALES_INVOICELINES_STOCKITEMID_WAREHOUSE_STOCKITEMS
FOREIGN KEY (StockItemID)
REFERENCES KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMS(StockItemID);

-- Foreign Key: Sales.InvoiceLines.PackageTypeID -> Warehouse.PackageTypes.PackageTypeID
ALTER TABLE KN_LOGISTICS.SNOWSQL.SALES_INVOICELINES
ADD CONSTRAINT FK_SALES_INVOICELINES_PACKAGETYPEID_WAREHOUSE_PACKAGETYPES
FOREIGN KEY (PackageTypeID)
REFERENCES KN_LOGISTICS.SNOWSQL.WAREHOUSE_PACKAGETYPES(PackageTypeID);


