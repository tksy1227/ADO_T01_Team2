-- Create a clean table with the same structure as the raw table but we pull data from the raw table into this table (final table)
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES AS
SELECT
  CAST(CASE WHEN PURCHASEORDERLINEID = 'NULL' THEN NULL ELSE PURCHASEORDERLINEID END AS VARCHAR(38)) AS PURCHASEORDERLINEID,
  CAST(CASE WHEN PURCHASEORDERID = 'NULL' THEN NULL ELSE PURCHASEORDERID END AS VARCHAR(38)) AS PURCHASEORDERID,
  CAST(CASE WHEN STOCKITEMID = 'NULL' THEN NULL ELSE STOCKITEMID END AS VARCHAR(38)) AS STOCKITEMID,
  CAST(CASE WHEN ORDEREDOUTERS = 'NULL' THEN NULL ELSE ORDEREDOUTERS END AS VARCHAR(38)) AS ORDEREDOUTERS,
  CAST(CASE WHEN DESCRIPTION = 'NULL' THEN NULL ELSE DESCRIPTION END AS VARCHAR(100)) AS DESCRIPTION,
  CAST(CASE WHEN RECEIVEDOUTERS = 'NULL' THEN NULL ELSE RECEIVEDOUTERS END AS VARCHAR(38)) AS RECEIVEDOUTERS,
  CAST(CASE WHEN PACKAGETYPEID = 'NULL' THEN NULL ELSE PACKAGETYPEID END AS VARCHAR(38)) AS PACKAGETYPEID,
  CAST(CASE WHEN EXPECTEDUNITPRICEPEROUTER = 'NULL' THEN NULL ELSE EXPECTEDUNITPRICEPEROUTER END AS VARCHAR(38)) AS EXPECTEDUNITPRICEPEROUTER,
  CAST(CASE WHEN LASTRECEIPTDATE = 'NULL' THEN NULL ELSE LASTRECEIPTDATE END AS VARCHAR(20)) AS LASTRECEIPTDATE,
  CAST(CASE WHEN ISORDERLINEFINALIZED = 'NULL' THEN NULL ELSE ISORDERLINEFINALIZED END AS VARCHAR(38)) AS ISORDERLINEFINALIZED
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES_RAW;

--------------------------------------------------
-- data type conversion (to float) EXPECTEDUNITPRICEPEROUTER 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN ISORDERLINEFINALIZED_NUM BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET ISORDERLINEFINALIZED_NUM = TO_BOOLEAN(ISORDERLINEFINALIZED);

SELECT ISORDERLINEFINALIZED, ISORDERLINEFINALIZED_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN ISORDERLINEFINALIZED;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN ISORDERLINEFINALIZED_NUM TO ISORDERLINEFINALIZED;

--------------------------------------------------
-- data type conversion (to float) EXPECTEDUNITPRICEPEROUTER 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN EXPECTEDUNITPRICEPEROUTER_NUM DECIMAL(18, 2);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET EXPECTEDUNITPRICEPEROUTER_NUM = TO_DECIMAL(EXPECTEDUNITPRICEPEROUTER, 18, 2);

SELECT EXPECTEDUNITPRICEPEROUTER, EXPECTEDUNITPRICEPEROUTER_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN EXPECTEDUNITPRICEPEROUTER;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN EXPECTEDUNITPRICEPEROUTER_NUM TO EXPECTEDUNITPRICEPEROUTER;

--------------------------------------------------
-- data type conversion (to number) PACKAGETYPEID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN PACKAGETYPEID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET PACKAGETYPEID_NUM = TO_NUMBER(PACKAGETYPEID);

SELECT PACKAGETYPEID, PACKAGETYPEID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN PACKAGETYPEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN PACKAGETYPEID_NUM TO PACKAGETYPEID;

--------------------------------------------------
-- data type conversion (to number) RECEIVEDOUTERS 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN RECEIVEDOUTERS_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET RECEIVEDOUTERS_NUM = TO_NUMBER(RECEIVEDOUTERS);

SELECT RECEIVEDOUTERS, RECEIVEDOUTERS_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN RECEIVEDOUTERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN RECEIVEDOUTERS_NUM TO RECEIVEDOUTERS;

--------------------------------------------------
-- data type conversion (to number) ORDEREDOUTERS 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN ORDEREDOUTERS_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET ORDEREDOUTERS_NUM = TO_NUMBER(ORDEREDOUTERS);

SELECT ORDEREDOUTERS, ORDEREDOUTERS_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN ORDEREDOUTERS;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN ORDEREDOUTERS_NUM TO ORDEREDOUTERS;

--------------------------------------------------
-- data type conversion (to number) STOCKITEMID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN STOCKITEMID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET STOCKITEMID_NUM = TO_NUMBER(STOCKITEMID);

SELECT STOCKITEMID, STOCKITEMID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN STOCKITEMID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN STOCKITEMID_NUM TO STOCKITEMID;

--------------------------------------------------
-- data type conversion (to number) PURCHASEORDERLINEID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN PURCHASEORDERLINEID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET PURCHASEORDERLINEID_NUM = TO_NUMBER(PURCHASEORDERLINEID);

SELECT PURCHASEORDERLINEID, PURCHASEORDERLINEID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN PURCHASEORDERLINEID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN PURCHASEORDERLINEID_NUM TO PURCHASEORDERLINEID;

--------------------------------------------------
-- data type conversion (to number) PURCHASEORDERID 
--------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN PURCHASEORDERID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET PURCHASEORDERID_NUM = TO_NUMBER(PURCHASEORDERID);

SELECT PURCHASEORDERID, PURCHASEORDERID_NUM
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN PURCHASEORDERID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN PURCHASEORDERID_NUM TO PURCHASEORDERID;

--------------------------------------------------
-- data type conversion (to date) LASTRECEIPTDATE 
--------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD COLUMN LASTRECEIPTDATE_DATE DATE;

-- Change to date format for ORDERDATE column
UPDATE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
SET LASTRECEIPTDATE_DATE = TO_DATE(LASTRECEIPTDATE, 'DD/MM/YYYY');

SELECT LASTRECEIPTDATE, LASTRECEIPTDATE_DATE
FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
DROP COLUMN LASTRECEIPTDATE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
RENAME COLUMN LASTRECEIPTDATE_DATE TO LASTRECEIPTDATE;

SELECT * FROM KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES LIMIT 10;


--primary key
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD CONSTRAINT PK_PURCHASING_PURCHASEORDERLINES_PURCHASEORDERLINEID
PRIMARY KEY (PURCHASEORDERLINEID);


-- null error handling for primary key (increment 1 to impute null value primary keys from the previous record)
WITH CTE AS (
    SELECT 
        PurchaseOrderLineID,
        PurchaseOrderID,
        StockItemID,
        OrderedOuters,
        Description,
        ReceivedOuters,
        PackageTypeID,
        ExpectedUnitPricePerOuter,
        LastReceiptDate,
        IsOrderLineFinalized,
        LAG(PurchaseOrderLineID) OVER (ORDER BY PurchaseOrderLineID) AS prev_PurchaseOrderLineID,
        ROW_NUMBER() OVER (ORDER BY PurchaseOrderLineID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.Purchasing_PurchaseOrderLines
)
SELECT 
    PurchaseOrderID,
    StockItemID,
    OrderedOuters,
    Description,
    ReceivedOuters,
    PackageTypeID,
    ExpectedUnitPricePerOuter,
    LastReceiptDate,
    IsOrderLineFinalized,
    CASE
        WHEN PurchaseOrderLineID IS NULL THEN prev_PurchaseOrderLineID + 1
        ELSE PurchaseOrderLineID
    END AS PurchaseOrderLineID
FROM CTE
ORDER BY row_num;


-- Adding the foreign keys
ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD CONSTRAINT FK_PURCHASEORDERLINES_PURCHASEORDERID
FOREIGN KEY (PURCHASEORDERID)
REFERENCES KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERS (PURCHASEORDERID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD CONSTRAINT FK_PURCHASEORDERLINES_STOCKITEMID
FOREIGN KEY (STOCKITEMID)
REFERENCES KN_LOGISTICS.SNOWSQL.WAREHOUSE_STOCKITEMS (STOCKITEMID);

ALTER TABLE KN_LOGISTICS.SNOWSQL.PURCHASING_PURCHASEORDERLINES
ADD CONSTRAINT FK_PURCHASEORDERLINES_PACKAGETYPEID
FOREIGN KEY (PACKAGETYPEID)
REFERENCES KN_LOGISTICS.SNOWSQL.WAREHOUSE_PACKAGETYPES(PACKAGETYPEID);
