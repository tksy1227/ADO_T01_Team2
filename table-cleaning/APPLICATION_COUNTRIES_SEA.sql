-- Verify the clean table
SELECT *
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA;

--------------------------------------------------------------
--CONVERSION OF DATATYPES 
--------------------------------------------------------------
//COUNTRYID
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
ADD COLUMN COUNTRYID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
SET COUNTRYID_NUM = TO_NUMBER(COUNTRYID);

SELECT COUNTRYID, COUNTRYID_NUM
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
DROP COLUMN COUNTRYID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
RENAME COLUMN COUNTRYID_NUM TO COUNTRYID;
// Check 10 rows of SUPPLIERID after updating the data type
SELECT COUNTRYID FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA LIMIT 10;

// Check 10 rows of the whole table after updating the data type
SELECT * FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA;

// LATESTRECORDEDPOPULATION
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
ADD COLUMN LATESTRECORDEDPOPULATION_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
SET LATESTRECORDEDPOPULATION_NUM = TO_NUMBER(LATESTRECORDEDPOPULATION);

SELECT LATESTRECORDEDPOPULATION, LATESTRECORDEDPOPULATION_NUM
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
DROP COLUMN LATESTRECORDEDPOPULATION;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
RENAME COLUMN LATESTRECORDEDPOPULATION_NUM TO LATESTRECORDEDPOPULATION;
// Check 10 rows of SUPPLIERID after updating the data type
SELECT LATESTRECORDEDPOPULATION FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA LIMIT 10;


--------------------------------------------------------------
--ADDING OF PRIMARY KEYS TO TABLE
--------------------------------------------------------------

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
ADD CONSTRAINT PK_APPLICATION_COUNTRIES_SEA_COUNTRYID
PRIMARY KEY (COUNTRYID);

--------------------------------------------------------------
--Adding of unique key to table
--------------------------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
ADD CONSTRAINT UK_APPLICATION_COUNTRIES_SEA_COUNTRYNAME
UNIQUE (COUNTRYNAME);

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
ADD CONSTRAINT UK_APPLICATION_COUNTRIES_SEA_FORMALNAME
UNIQUE (FORMALNAME);

-------------------------------------------------------
--ERROR HANDLING
-------------------------------------------------------
WITH CTE AS (
    SELECT 
        COUNTRYNAME,
        FORMALNAME,
        CONTINENT,
        REGION,
        SUBREGION,
        COUNTRYID,
        LATESTRECORDEDPOPULATION,
        LAG(COUNTRYID) OVER (ORDER BY COUNTRYID) AS prev_countryid,
        ROW_NUMBER() OVER (ORDER BY COUNTRYID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.APPLICATION_COUNTRIES_SEA
)
SELECT 
    COUNTRYNAME,
    FORMALNAME,
    CONTINENT,
    REGION,
    SUBREGION,
    CASE
        WHEN COUNTRYID IS NULL THEN prev_countryid + 1
        ELSE COUNTRYID
    END AS COUNTRYID,
    LATESTRECORDEDPOPULATION
FROM CTE
ORDER BY row_num;

-------------------------------------------------------
--Adding of foreign key to table
-------------------------------------------------------
--THERE ARE NO FOREIGN KEYS FOR THIS TABLE

