-- Create a clean table with the same structure as the raw table
CREATE OR REPLACE TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE AS
SELECT
  CAST(CASE WHEN PERSONID = 'NULL' THEN NULL ELSE PERSONID END AS VARCHAR(38)) AS PERSONID,
  CAST(CASE WHEN FULLNAME = 'NULL' THEN NULL ELSE FULLNAME END AS VARCHAR(50)) AS FULLNAME,
  CAST(CASE WHEN PREFERREDNAME = 'NULL' THEN NULL ELSE PREFERREDNAME END AS VARCHAR(50)) AS PREFERREDNAME,
  CAST(CASE WHEN SEARCHNAME = 'NULL' THEN NULL ELSE SEARCHNAME END AS VARCHAR(101)) AS SEARCHNAME,
  CAST(CASE WHEN ISEMPLOYEE = 'NULL' THEN NULL ELSE ISEMPLOYEE END AS VARCHAR(38)) AS ISEMPLOYEE,
  CAST(CASE WHEN ISSALESPERSON = 'NULL' THEN NULL ELSE ISSALESPERSON END AS VARCHAR(38)) AS ISSALESPERSON
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE_RAW;

-- Verify the clean table
SELECT *
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE;


---------------------------------------------
// data type conversion (to number): PERSONID
---------------------------------------------
// PERSONID
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
ADD COLUMN PERSONID_NUM NUMBER(38,0);

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
SET PERSONID_NUM = TO_NUMBER(PERSONID);

SELECT PERSONID, PERSONID_NUM
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
DROP COLUMN PERSONID;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
RENAME COLUMN PERSONID_NUM TO PERSONID;
// Check 10 rows of SUPPLIERID after updating the data type
SELECT PERSONID FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE LIMIT 10;

// Check 10 rows of the whole table after updating the data type
SELECT * FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE;

---------------------------------------------
-- Data type conversion (BIT to BOOLEAN)
---------------------------------------------
-- Convert ISEMPLOYEE to BOOLEAN
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
ADD COLUMN ISEMPLOYEE_BOOL BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
SET ISEMPLOYEE_BOOL = CASE 
    WHEN ISEMPLOYEE = '1' THEN TRUE
    WHEN ISEMPLOYEE = '0' THEN FALSE
    ELSE NULL
END;

SELECT ISEMPLOYEE, ISEMPLOYEE_BOOL
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
DROP COLUMN ISEMPLOYEE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
RENAME COLUMN ISEMPLOYEE_BOOL TO ISEMPLOYEE;

---------------------------------------------
-- Convert ISSALESPERSON to BOOLEAN
---------------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
ADD COLUMN ISSALESPERSON_BOOL BOOLEAN;

UPDATE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
SET ISSALESPERSON_BOOL = CASE 
    WHEN ISSALESPERSON = '1' THEN TRUE
    WHEN ISSALESPERSON = '0' THEN FALSE
    ELSE NULL
END;

SELECT ISSALESPERSON, ISSALESPERSON_BOOL
FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
DROP COLUMN ISSALESPERSON;

ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
RENAME COLUMN ISSALESPERSON_BOOL TO ISSALESPERSON;


SELECT ISSALESPERSON,ISEMPLOYEE FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE LIMIT 10;

---------------------------------------
--Adding of primary key to table
---------------------------------------
ALTER TABLE KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
ADD CONSTRAINT PK_APPLICATION_PEOPLE_PERSONID
PRIMARY KEY (PERSONID);


-------------------------------------------------------
-- ERROR HANDLING
-------------------------------------------------------
WITH CTE AS (
    SELECT 
        PERSONID,
        FULLNAME,
        PREFERREDNAME,
        SEARCHNAME,
        ISEMPLOYEE,
        ISSALESPERSON,
        LAG(PERSONID) OVER (ORDER BY PERSONID) AS prev_personid,
        ROW_NUMBER() OVER (ORDER BY PERSONID) AS row_num
    FROM KN_LOGISTICS.SNOWSQL.APPLICATION_PEOPLE
)
SELECT 
    FULLNAME,
    PREFERREDNAME,
    SEARCHNAME,
    ISEMPLOYEE,
    ISSALESPERSON,
    CASE
        WHEN PERSONID IS NULL THEN prev_personid + 1
        ELSE PERSONID
    END AS PERSONID
FROM CTE
ORDER BY row_num;



-------------------------------------------------------
--Adding of foreign key to table
-------------------------------------------------------
-- THERE ARE NO FOREIGN KEYS FOR THIS TABLE
